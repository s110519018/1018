#include <Wire.h>
#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define OLED_MOSI   11 //D1
#define OLED_CLK   12 //D0
#define OLED_DC    9 //DC
#define OLED_CS    8 //CS
#define OLED_RESET 10 //RES
#define fsr_pin A0
Adafruit_SSD1306 display(OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);
const int ledCount = 8;    // the number of LEDs in the bar graph
int ledPins[] = {0,1,2,3,4,5,6,7};  


static const unsigned char PROGMEM Logo[]={
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B11100000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B11100000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B11100000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B11110000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000001, B11111111, B11111111, B11110000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B01111111, B11111111, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00111111, B11111111, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00001111, B11111100, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00001111, B11111100, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00001111, B11111100, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00001111, B11111110, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00011110, B00011110, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00011100, B00000111, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00110000, B00000001, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  };
static const unsigned char PROGMEM Logo2[]={
   B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
 B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000010, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000110, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000111, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000111, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00001111, B10000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00001111, B10000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00011111, B10000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00011111, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00111111, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000001, B11111111, B11111111, B11111111, B11111100, B00000000, B00000000, 
  B00000000, B00000000, B01111111, B11111111, B11111111, B11110000, B00000000, B00000000, 
  B00000000, B00000000, B00011111, B11111111, B11111111, B11000000, B00000000, B00000000, 
  B00000000, B00000000, B00001111, B11111111, B11111111, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B11111111, B11111110, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B11111111, B11111000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B11111111, B11111000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B11111111, B11111100, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B11111111, B11111100, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B11111101, B11111100, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B11110000, B01111110, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000111, B11000000, B00111110, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000111, B00000000, B00001111, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000100, B00000000, B00000011, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,  
  };
  
void setup()
{
  Serial.begin(115200);
  display.begin(SSD1306_SWITCHCAPVCC);
  display.clearDisplay();
  display.drawBitmap(23,0,Logo,64,32,WHITE);
  display.display();

  for (int thisLed = 0; thisLed < ledCount; thisLed++) {
    pinMode(ledPins[thisLed], OUTPUT);
   }

}

void loop()
{
  int fsr_value = analogRead(fsr_pin); // 讀取FSR
  int led_value = map(fsr_value, 0, 600, 0, 10); // 從0~1023映射到0~10
  for (int thisLed = 0; thisLed < ledCount; thisLed++) {
    if (thisLed < led_value) {
      digitalWrite(ledPins[thisLed], HIGH);
     }
   else {
      digitalWrite(ledPins[thisLed], LOW);
     }
   }
   if (fsr_value>=0 && fsr_value<=300){
      display.clearDisplay();
      display.drawBitmap(23,0,Logo,64,32,WHITE);
      display.display();
    }
    else{
      display.clearDisplay();
      display.drawBitmap(23,0,Logo2,64,32,WHITE);
      display.display();
    }
    //Serial.println(fsr_value);
}
